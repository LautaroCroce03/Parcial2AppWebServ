// <auto-generated />
using System;
using DiscograficaWebApi.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Parcial2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240612003533_crear")]
    partial class crear
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscograficaWebApi.Entity.Cancion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DiscoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneroMusical")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiscoId");

                    b.ToTable("Canciones");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DiscoId = 1L,
                            Duracion = 420,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Rock",
                            Nombre = "Time"
                        },
                        new
                        {
                            Id = 2L,
                            DiscoId = 1L,
                            Duracion = 382,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Rock",
                            Nombre = "Money"
                        },
                        new
                        {
                            Id = 3L,
                            DiscoId = 1L,
                            Duracion = 462,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Rock",
                            Nombre = "Us and Them"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.Entity.Disco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Banda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadVendida")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneroMusical")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Banda = "Pink Floyd",
                            CantidadVendida = 4500000,
                            FechaLanzamiento = new DateTime(1973, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Rock",
                            SKU = "DSM",
                            Titulo = "The Dark Side of the Moon"
                        },
                        new
                        {
                            Id = 2L,
                            Banda = "Michael Jackson",
                            CantidadVendida = 70000000,
                            FechaLanzamiento = new DateTime(1982, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Pop",
                            SKU = "THR",
                            Titulo = "Thriller"
                        },
                        new
                        {
                            Id = 3L,
                            Banda = "AC/DC",
                            CantidadVendida = 50000000,
                            FechaLanzamiento = new DateTime(1980, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroMusical = "Rock",
                            SKU = "BIA",
                            Titulo = "Back in Black"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.Entity.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "emi@gmail.com",
                            Nombre = "Emiliano Pilo",
                            Password = "123456",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "usuario@gmail.com",
                            Nombre = "USuario 2",
                            Password = "654321",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "usuario3@gmail.com",
                            Nombre = "Usuario 3",
                            Password = "123456",
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("DiscograficaWebApi.Entity.Cancion", b =>
                {
                    b.HasOne("DiscograficaWebApi.Entity.Disco", "Disco")
                        .WithMany("Canciones")
                        .HasForeignKey("DiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("DiscograficaWebApi.Entity.Disco", b =>
                {
                    b.Navigation("Canciones");
                });
#pragma warning restore 612, 618
        }
    }
}
